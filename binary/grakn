#!/usr/bin/env bash
#
# Copyright (C) 2020 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# Grakn global variables
JAVA_BIN=java
[[ $(readlink $0) ]] && path=$(readlink $0) || path=$0
GRAKN_HOME=$(cd "$(dirname "${path}")" && pwd -P)
GRAKN_CONFIG="server/conf/grakn.properties"

CONSOLE_JAR_FILENAME=(${GRAKN_HOME}/console/services/lib/io-grakn-console-grakn-console*.jar) # TODO: remove 'services/' in 2.0
SERVER_JAR_FILENAME=(${GRAKN_HOME}/server/lib/common/io-grakn-core-grakn-server*.jar)

# ================================================
# common helper functions
# ================================================
exit_if_java_not_found() {
    which "${JAVA_BIN}" > /dev/null
    exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        echo "Java is not installed on this machine. Grakn needs Java 1.8 in order to run."
        exit 1
    fi
}

# =============================================
# main routine
# =============================================

exit_if_java_not_found

if [ -z "$1" ]; then
    echo "Missing argument. Possible commands are:"
    echo "  Server:          grakn server [--help]"
    echo "  Console:         grakn console [--help]"
    exit 1
elif [ "$1" = "console" ]; then
    if [ -f "${CONSOLE_JAR_FILENAME}" ]; then
        SERVICE_LIB_CP="console/services/lib/*"
        CLASSPATH="${GRAKN_HOME}/${SERVICE_LIB_CP}:${GRAKN_HOME}/console/conf/"
    # exec replaces current shell process with java so no commands after this one will ever get executed
        exec java ${CONSOLE_JAVAOPTS} -cp "${CLASSPATH}" -Dgrakn.dir="${GRAKN_HOME}" grakn.console.GraknConsole "${@:2}"
    else
        echo "Grakn Core Console is not included in this Grakn distribution."
        echo "You may want to install Grakn Core Console or Grakn Core (all)."
        exit 1
    fi
elif [[ "$1" = "server" ]] || [[ "$1" = "version" ]]; then
    if [[ -f "${SERVER_JAR_FILENAME}" ]]; then
        IDX=0
        while [[ "${@:IDX}" ]]; do
            case ${@:IDX} in
                --debug) DEBUG=yes;
                break;
            esac
            IDX=$((IDX+1))
        done
        LIB_COMMON="server/lib/common/*"
        CLASSPATH="${GRAKN_HOME}/server/conf/:${GRAKN_HOME}/${LIB_COMMON}"
        # exec replaces current shell process with java so no commands after these ones will ever get executed
        if [ $DEBUG ]; then
            CLASSPATH="${CLASSPATH}:${GRAKN_HOME}/server/lib/dev/*"
            exec java ${GRAKN_DAEMON_JAVAOPTS} -ea -cp "${CLASSPATH}" -Dgrakn.dir="${GRAKN_HOME}" -Dgrakn.conf="${GRAKN_HOME}/${GRAKN_CONFIG}" -Dstorage.javaopts="${STORAGE_JAVAOPTS}" -Dserver.javaopts="${SERVER_JAVAOPTS}" -Dlogback.configurationFile=logback-debug.xml grakn.core.server.GraknServer "${@:2}"
        else
            CLASSPATH="${CLASSPATH}:${GRAKN_HOME}/server/lib/prod/*"
            exec java ${GRAKN_DAEMON_JAVAOPTS} -cp "${CLASSPATH}" -Dgrakn.dir="${GRAKN_HOME}" -Dgrakn.conf="${GRAKN_HOME}/${GRAKN_CONFIG}" -Dstorage.javaopts="${STORAGE_JAVAOPTS}" -Dserver.javaopts="${SERVER_JAVAOPTS}" grakn.core.server.GraknServer "${@:2}"
        fi
    else
        echo "Grakn Core Server is not included in this Grakn distribution."
        echo "You may want to install Grakn Core Server or Grakn Core (all)."
        exit 1
    fi
else
    echo "Invalid argument: $1. Possible commands are: "
    echo "  Server:          grakn server [--help]"
    echo "  Console:         grakn console [--help]"
    exit 1
fi
