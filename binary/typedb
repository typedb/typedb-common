#!/usr/bin/env bash
#
# Copyright (C) 2021 Vaticle
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# TypeDB global variables
JAVA_BIN=java
if [[ ! -z "$JAVA_HOME" ]]; then
    JAVA_BIN="$JAVA_HOME/bin/java"
fi
[[ $(readlink $0) ]] && path=$(readlink $0) || path=$0
TYPEDB_HOME=$(cd "$(dirname "${path}")" && pwd -P)
TYPEDB_CONFIG="server/conf/typedb.properties"

# ================================================
# common helper functions
# ================================================
exit_if_java_not_found() {
    which "${JAVA_BIN}" > /dev/null
    exit_code=$?

    if [[ $exit_code -ne 0 ]]; then
        echo "Java is not installed on this machine. TypeDB needs Java 11+ in order to run."
        exit 1
    fi
}

# =============================================
# main routine
# =============================================

exit_if_java_not_found

if [ -z "$1" ]; then
    echo "Missing argument. Possible commands are:"
    echo "  Server:          typedb server [--help]"
    echo "  Node:            typedb node [--help]"
    echo "  Console:         typedb console [--help]"
    exit 1
elif [ "$1" = "console" ]; then
    if [ -d "${TYPEDB_HOME}/console" ]; then
        SERVICE_LIB_CP="console/lib/*"
        CLASSPATH="${TYPEDB_HOME}/${SERVICE_LIB_CP}:${TYPEDB_HOME}/console/conf/"
    # exec replaces current shell process with java so no commands after this one will ever get executed
        exec $JAVA_BIN ${JAVAOPTS} -cp "${CLASSPATH}" -Dtypedb.dir="${TYPEDB_HOME}" com.vaticle.typedb.console.TypeDBConsole "${@:2}"
    else
        echo "TypeDB Console is not included in this TypeDB distribution."
        echo "You may want to install TypeDB Console or TypeDB (all)."
        exit 1
    fi
elif [[ "$1" = "server" ]] || [[ "$1" = "node" ]]; then
    if [[ "$1" = "server" ]]; then
        TYPEDB_SERVER_NAME="TypeDB (Server)"
        TYPEDB_SERVER_MAIN=com.vaticle.typedb.core.server.TypeDBServer
        SERVER_DIR="${TYPEDB_HOME}/server"
    else
        TYPEDB_SERVER_NAME="TypeDB Cluster (Node)"
        TYPEDB_SERVER_MAIN=com.vaticle.typedb.cluster.node.TypeDBNode
        SERVER_DIR="${TYPEDB_HOME}/node"
    fi
    LIB_DIR="${SERVER_DIR}/lib"
    CLASSPATH="${SERVER_DIR}/conf/:${LIB_DIR}/common/*"

    if [[ -d "${SERVER_DIR}" ]]; then
        IDX=0
        while [[ "${@:IDX}" ]]; do
            case ${@:IDX:1} in
                --debug) DEBUG=yes;
                break;
            esac
            IDX=$((IDX+1))
        done

        # exec replaces current shell process with java so no commands after these ones will ever get executed
        if [ $DEBUG ]; then
            case "$(uname -s)" in
                Darwin) CLASSPATH="${CLASSPATH}:$LIB_DIR/dev/*" ;;
                *) echo "WARNING: Debug mode RocksDB is not available in this platform. Fallback to production mode."
                   CLASSPATH="${CLASSPATH}:$LIB_DIR/prod/*" ;;
            esac
            exec $JAVA_BIN ${JAVAOPTS} -ea -cp "${CLASSPATH}" \
                -Dtypedb.dir="${TYPEDB_HOME}" -Dtypedb.conf="${TYPEDB_HOME}/${TYPEDB_CONFIG}" \
                -Dlogback.configurationFile=logback-debug.xml \
                ${TYPEDB_SERVER_MAIN} "${@:2}"
        else
            CLASSPATH="${CLASSPATH}:$LIB_DIR/prod/*"
            exec $JAVA_BIN ${JAVAOPTS} -cp "${CLASSPATH}" \
                -Dtypedb.dir="${TYPEDB_HOME}" -Dtypedb.conf="${TYPEDB_HOME}/${TYPEDB_CONFIG}" \
                ${TYPEDB_SERVER_MAIN} "${@:2}"
        fi
    else
        echo "$TYPEDB_SERVER_NAME is not included in this TypeDB distribution."
        echo "You may want to install $TYPEDB_SERVER_NAME or TypeDB (all)."
        exit 1
    fi
else
    echo "Invalid argument: $1. Possible commands are: "
    echo "  Server:          typedb server [--help]"
    echo "  Node:            typedb node [--help]"
    echo "  Console:         typedb console [--help]"
    exit 1
fi
