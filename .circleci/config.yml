#
# Copyright (C) 2020 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/linux.sh
      - run: bash ./linux.sh && rm ./linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
      - run: bash ./rbe.sh && rm ./rbe.sh
  run-bazel:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_dependencies//tool/bazelrun:rbe -- << parameters.command >>

jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - install-bazel
      - checkout
      - run: bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
      - run-bazel:
          command: bazel build //...
      - run: bazel run @graknlabs_dependencies//tool/unuseddeps:unused-deps -- list

  build-checkstyle:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - install-bazel
      - checkout
      - run: bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
      - run-bazel:
          command: bazel test $(bazel query 'kind(checkstyle_test, //...)')

  build-analysis:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - install-bazel
      - checkout
      - run: |
          SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
            bazel run @graknlabs_dependencies//tool/sonarcloud:code-analysis -- \
            --project-key graknlabs_common --branch=$CIRCLE_BRANCH --commit-id=$CIRCLE_SHA1

  deploy-maven-snapshot:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - checkout
      - install-bazel
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-maven -- snapshot

  deploy-apt-snapshot:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - checkout
      - install-bazel
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //binary:deploy-apt -- snapshot

  deploy-rpm-snapshot:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - checkout
      - install-bazel
      - run: sudo apt-get update && sudo apt-get install rpm
      - run: |
          export DEPLOY_RPM_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_RPM_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //binary:deploy-rpm -- snapshot

  sync-dependencies-snapshot:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - install-bazel
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/sync:dependencies -- \
          --source common@$CIRCLE_SHA1 \
          --targets client-java:master cluster:master console:master grakn-2.0:master graql:master verification:master

  release-approval:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - install-bazel
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/release:approval

  deploy-github:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - install-bazel
      - checkout
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/release:create-notes -- common $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1

  deploy-maven-release:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - install-bazel
      - checkout
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-maven -- release

  deploy-apt:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - checkout
      - install-bazel
      - run: cat VERSION
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //binary:deploy-apt -- release

  deploy-rpm:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/common
    steps:
      - checkout
      - install-bazel
      - run: sudo apt-get update && sudo apt-get install rpm
      - run: |
          export DEPLOY_RPM_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_RPM_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(cat VERSION) //binary:deploy-rpm -- release

  sync-dependencies-release:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - install-bazel
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tool/sync:dependencies -- \
          --source common@$(cat VERSION) \
          --targets client-java:master cluster:master console:master grakn-2.0:master graql:master verification:master

  release-cleanup:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/graknlabs/common common-release-branch

workflows:
  common:
    jobs:
      - build:
          filters:
            branches:
              ignore: common-release-branch
      - build-checkstyle:
          filters:
            branches:
              only:
                - master
      - build-analysis:
          filters:
            branches:
              only:
                - master
      - deploy-maven-snapshot:
          filters:
            branches:
              only:
                - master
          requires:
            - build
            - build-analysis
            - build-checkstyle
      - deploy-apt-snapshot:
          filters:
            branches:
              only:
                - master
          requires:
            - build
            - build-analysis
            - build-checkstyle
      - deploy-rpm-snapshot:
          filters:
            branches:
              only:
                - master
          requires:
            - build
            - build-analysis
            - build-checkstyle
      - sync-dependencies-snapshot:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy-maven-snapshot
            - deploy-apt-snapshot
            - deploy-rpm-snapshot
      - release-approval:
          filters:
            branches:
              only:
                - master
          requires:
            - deploy-maven-snapshot

  common-release:
    jobs:
      - deploy-github:
          filters:
            branches:
              only: common-release-branch
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
          filters:
            branches:
              only: common-release-branch
      - deploy-maven-release:
          filters:
            branches:
              only: common-release-branch
          requires:
            - deploy-approval
      - deploy-apt:
          filters:
            branches:
              only: dependencies-release-branch
          requires:
            - deploy-approval
      - deploy-rpm:
          filters:
            branches:
              only: dependencies-release-branch
          requires:
            - deploy-approval
      - sync-dependencies-release:
          filters:
            branches:
              only: common-release-branch
          requires:
            - deploy-maven-release
            - deploy-apt
            - deploy-rpm
      - release-cleanup:
          filters:
            branches:
              only: common-release-branch
          requires:
            - deploy-maven-release
